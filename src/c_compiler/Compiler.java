/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package c_compiler;

import java.awt.Desktop;
import java.awt.Point;
import java.awt.Rectangle;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Niteesh Kamal Chaudhary
 */
public class Compiler extends javax.swing.JFrame {

    /**
     * Creates new form Compiler
     */
    int indx=0;
    ShowDirectories dtree;
    CodePane sourceHolder;
    TerminalApp myterminal;
    Vector<TerminalApp> myterminals;
    public Compiler() {
        myterminals=new Vector<>();
        sourceHolder = new CodePane();
        initComponents();
        sourceHolder1.add(sourceHolder);
        dtree= new ShowDirectories(address.getText(),this);
        myterminal=new TerminalApp(address.getText());
        treeHolder.add(dtree,"Center");
        ter.addTab("Main",myterminal);
        details.setVisible(false);
        centertab.setTitleAt(0,fname.getText() );
        setExtendedState(JFrame.MAXIMIZED_BOTH);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        comp = new javax.swing.JButton();
        comp_run = new javax.swing.JButton();
        rrun = new javax.swing.JButton();
        details = new javax.swing.JPanel();
        address = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ext = new javax.swing.JTextField();
        tabb = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        op_board = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        r_output = new javax.swing.JTextArea();
        teminals = new javax.swing.JPanel();
        ter = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        treeHolder = new javax.swing.JPanel();
        centertab = new javax.swing.JTabbedPane();
        sourceHolder1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        new_menu = new javax.swing.JMenuItem();
        op_menu = new javax.swing.JMenuItem();
        sv_menu = new javax.swing.JMenuItem();
        sas_menu = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(4);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        comp.setText("compile");
        comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compActionPerformed(evt);
            }
        });

        comp_run.setText("compile/run");
        comp_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comp_runActionPerformed(evt);
            }
        });

        rrun.setText("run");
        rrun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rrunActionPerformed(evt);
            }
        });

        details.setBackground(new java.awt.Color(255, 102, 153));
        details.setOpaque(false);

        address.setEditable(false);
        address.setText("D:\\\\mycompilerpro\\\\");

            jLabel1.setText("dir:");

            jLabel2.setText("fileName");

            fname.setEditable(false);

            jLabel3.setText("extension");

            ext.setEditable(false);
            ext.setText("cpp");

            javax.swing.GroupLayout detailsLayout = new javax.swing.GroupLayout(details);
            details.setLayout(detailsLayout);
            detailsLayout.setHorizontalGroup(
                detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(detailsLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addGap(513, 513, 513))
                        .addGroup(detailsLayout.createSequentialGroup()
                            .addGroup(detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(fname)
                                .addComponent(ext, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                            .addGap(0, 0, Short.MAX_VALUE))))
            );
            detailsLayout.setVerticalGroup(
                detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailsLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(35, 35, 35)
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel3)
                    .addGap(18, 18, 18)
                    .addComponent(ext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(comp_run, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addComponent(rrun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(details, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(comp)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(rrun)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(comp_run)
                    .addGap(18, 18, 18)
                    .addComponent(details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(439, Short.MAX_VALUE))
            );

            getContentPane().add(jPanel3, java.awt.BorderLayout.EAST);

            tabb.setPreferredSize(new java.awt.Dimension(1159, 221));

            op_board.setEditable(false);
            op_board.setColumns(20);
            op_board.setRows(5);
            jScrollPane2.setViewportView(op_board);

            tabb.addTab("Logs", jScrollPane2);

            r_output.setColumns(20);
            r_output.setRows(5);
            jScrollPane3.setViewportView(r_output);

            tabb.addTab("Output", jScrollPane3);

            teminals.setLayout(new java.awt.BorderLayout());

            ter.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
            ter.setTabPlacement(javax.swing.JTabbedPane.LEFT);
            ter.setPreferredSize(new java.awt.Dimension(1000, 100));
            teminals.add(ter, java.awt.BorderLayout.CENTER);

            jPanel1.setPreferredSize(new java.awt.Dimension(49, 190));

            jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            jButton1.setForeground(new java.awt.Color(0, 153, 0));
            jButton1.setText("+");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            jButton2.setForeground(new java.awt.Color(204, 0, 0));
            jButton2.setText("X");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(104, Short.MAX_VALUE))
            );

            teminals.add(jPanel1, java.awt.BorderLayout.WEST);

            tabb.addTab("Terminal", teminals);

            getContentPane().add(tabb, java.awt.BorderLayout.SOUTH);

            jPanel2.setMinimumSize(new java.awt.Dimension(100, 60));
            jPanel2.setPreferredSize(new java.awt.Dimension(1159, 60));

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 1159, Short.MAX_VALUE)
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 60, Short.MAX_VALUE)
            );

            getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

            treeHolder.setMinimumSize(new java.awt.Dimension(100, 680));
            treeHolder.setPreferredSize(new java.awt.Dimension(150, 681));
            treeHolder.setLayout(new java.awt.BorderLayout());
            getContentPane().add(treeHolder, java.awt.BorderLayout.WEST);

            sourceHolder1.setBackground(new java.awt.Color(0, 51, 204));
            sourceHolder1.setLayout(new java.awt.BorderLayout());
            centertab.addTab("abc", sourceHolder1);

            getContentPane().add(centertab, java.awt.BorderLayout.CENTER);

            jMenu1.setText("File");

            new_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
            new_menu.setText("New");
            new_menu.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    new_menuActionPerformed(evt);
                }
            });
            jMenu1.add(new_menu);

            op_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
            op_menu.setText("Open");
            op_menu.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    op_menuActionPerformed(evt);
                }
            });
            jMenu1.add(op_menu);

            sv_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
            sv_menu.setText("Save");
            sv_menu.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sv_menuActionPerformed(evt);
                }
            });
            jMenu1.add(sv_menu);

            sas_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
            sas_menu.setText("Save As");
            sas_menu.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    sas_menuActionPerformed(evt);
                }
            });
            jMenu1.add(sas_menu);

            jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
            jMenuItem4.setText("Exit");
            jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuItem4ActionPerformed(evt);
                }
            });
            jMenu1.add(jMenuItem4);

            jMenuBar1.add(jMenu1);

            jMenu2.setText("Edit");

            jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
            jMenuItem6.setText("Cut");
            jMenu2.add(jMenuItem6);

            jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
            jMenuItem7.setText("Copy");
            jMenu2.add(jMenuItem7);

            jMenuBar1.add(jMenu2);

            jMenu3.setText("Run");

            jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
            jMenuItem1.setText("Compile");
            jMenu3.add(jMenuItem1);

            jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
            jMenuItem2.setText("Run");
            jMenu3.add(jMenuItem2);

            jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
            jMenuItem3.setText("Compilr/Run");
            jMenu3.add(jMenuItem3);

            jMenuBar1.add(jMenu3);

            setJMenuBar(jMenuBar1);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        myterminals.add(new TerminalApp(address.getText()));
        ter.addTab("T"+(indx+1),myterminals.get(indx));
        indx++;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        myterminals.get(indx-1).close();
        myterminals.remove(indx-1);
        ter.remove(indx);
        indx--;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void new_menuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_new_menuActionPerformed
        New_n n = new New_n(this);
        n.setVisible(true);
        // this.setFocusable(false);
    }// GEN-LAST:event_new_menuActionPerformed

    private void compActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_compActionPerformed
        sv_menu.doClick();
        op_board.setText("");
        if (ext.getText().equals("c")){
            myterminal.runInstruction("cd "+address.getText()+"&& gcc "+fname.getText()+".c -o "+fname.getText());
            tabb.setSelectedIndex(2);
        }
        else if(ext.getText().equals("cpp")) {
           myterminal.runInstruction("cd "+address.getText()+"&& g++ "+fname.getText()+".cpp -o "+fname.getText());
           tabb.setSelectedIndex(2);
        } else if (ext.getText().equals("java")) {
            myterminal.runInstruction("cd "+address.getText()+"&& javac "+fname.getText()+".java");
            tabb.setSelectedIndex(2);
        }
    }// GEN-LAST:event_compActionPerformed

    public void changeExt(String s) {
        ext.setText(s);
    }

    private void rrunActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rrunActionPerformed
        if (ext.getText().equals("c") || ext.getText().equals("cpp")) {
           myterminal.runInstruction("cd "+address.getText()+"&& "+fname.getText()+".exe");
           tabb.setSelectedIndex(2);
        } else if (ext.getText().equals("java")) {
            myterminal.runInstruction("cd "+address.getText()+"&& java "+fname.getText());
            tabb.setSelectedIndex(2);
        }
    }

    private void comp_runActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_comp_runActionPerformed
        sv_menu.doClick();
        op_board.setText("");
        Thread tth=new Thread(()->{
            if (ext.getText().equals("c")){
            myterminal.runInstruction("cd "+address.getText()+" && gcc "+fname.getText()+".c -o "+fname.getText()+" && "+fname.getText()+".exe");
            tabb.setSelectedIndex(2);
        }
        else if(ext.getText().equals("cpp")) {
           myterminal.runInstruction("cd "+address.getText()+"&& g++ "+fname.getText()+".cpp -o "+fname.getText()+" && "+fname.getText()+".exe");
           tabb.setSelectedIndex(2);
        } else if (ext.getText().equals("java")) {
            myterminal.runInstruction("cd "+address.getText()+"&& javac "+fname.getText()+".java" +" && "+"java "+fname.getText());
            tabb.setSelectedIndex(2);
        }
        });
tth.start();

        // TODO add your handling code here:
    }// GEN-LAST:event_comp_runActionPerformed

    private void sas_menuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_sas_menuActionPerformed
        JFileChooser fileChooser = new JFileChooser("D:\\c_prog\\");
        fileChooser.setDialogTitle("Save AS");

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());

            try {
                File myObj = new File(fileToSave.getAbsolutePath() + "." + ext.getText());
                fname.setText(fileToSave.getName());

                String addrt = "", addr = fileToSave.getPath().substring(0,
                        (fileToSave.getPath().length() - fileToSave.getName().length()));
                // String c="\\";
                /*
                 * String [] arr = addr.split("");
                 * for(int i=0;i<arr.length;i++)
                 * {
                 * addrt+=arr[i]+"\\\\";
                 * }
                 */
                address.setText(addr);
                if (myObj.createNewFile()) {
                    System.out.println("File created: " + myObj.getName());

                    try {
                        FileWriter myWriter = new FileWriter(fileToSave.getAbsolutePath() + "." + ext.getText());
                        myWriter.write(sourceHolder.source_board.getText());
                        myWriter.close();
                        System.out.println("Successfully wrote to the file.");
                    } catch (IOException e) {
                        System.out.println("An error occurred.");
                        e.printStackTrace();
                    }

                } else {
                    System.out.println("File already exists.");
                }
            } catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }
        }

    }// GEN-LAST:event_sas_menuActionPerformed

    private void op_menuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_op_menuActionPerformed
        JFileChooser chooser = new JFileChooser("D:/");
        chooser.setDialogTitle("Open");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int userSelection = chooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File f_o = chooser.getSelectedFile();
            try {
                BufferedReader br = new BufferedReader(new FileReader(f_o));
                // fname.setText(s.substring(0,s.indexOf('.')));
                String s = f_o.getName();
                fname.setText(s.substring(0, s.indexOf('.')));

                ext.setText(s.substring(s.indexOf('.') + 1));
                System.out.println(s + " " + "nk");// f_o.getName().split(".")[1]);
                String addr = f_o.getPath().substring(0, (f_o.getPath().length() - f_o.getName().length()));
                Thread t1 = new Thread(() -> {
                    dtree.setModel(addr);
                });
                t1.start();

                address.setText(addr);
                sourceHolder.source_board.setText(null);
                String text = null;
                while ((text = br.readLine()) != null) {
                    sourceHolder.source_board.append(text);
                    sourceHolder.source_board.append("\n");
                }
                sourceHolder.source_board.setCaretPosition(0);
                br.close();
                System.out.println(s.substring(0, s.indexOf('.')) + " " + "nk");
            } catch (IOException exp) {
                exp.printStackTrace();
                JOptionPane.showMessageDialog(this, "Failed to read file", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }// GEN-LAST:event_op_menuActionPerformed

    private void sv_menuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_sv_menuActionPerformed
        if (fname.getText().equals("")) {
            sas_menu.doClick();
        } else {
            try {
                FileWriter myWriter = new FileWriter(address.getText() + fname.getText() + "." + ext.getText());
                myWriter.write(sourceHolder.source_board.getText());
                myWriter.close();
                System.out.println("Successfully wrote to the file.");
            } catch (IOException e) {
                System.out.println("An error occurred.");
                e.printStackTrace();
            }
        }
    }// GEN-LAST:event_sv_menuActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem4ActionPerformed
        this.dispose();
    }// GEN-LAST:event_jMenuItem4ActionPerformed

    Point cur_p;

    private void source_boardKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_source_boardKeyTyped
        cur_p = sourceHolder.source_board.getLocation();
    }// GEN-LAST:event_source_boardKeyTyped

    Rectangle rect;

    private void source_boardKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_source_boardKeyPressed
        try {
            rect = sourceHolder.source_board.modelToView(sourceHolder.source_board.getCaretPosition());
            System.out.println(rect.getX() + " " + rect.getY() + " " + rect.getWidth() + " " + rect.getHeight());
            // for(int i=1;i<rect.getX()/44;i++){

        } catch (BadLocationException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_source_boardKeyPressed

    private void source_boardKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_source_boardKeyReleased
        switch (evt.getKeyChar()) {
            case '{':
                sourceHolder.source_board.insert("}", sourceHolder.source_board.getCaretPosition());
                sourceHolder.source_board.setCaretPosition(sourceHolder.source_board.getCaretPosition() - 1);
                break;
            case '(':
                sourceHolder.source_board.insert(")", sourceHolder.source_board.getCaretPosition());
                sourceHolder.source_board.setCaretPosition(sourceHolder.source_board.getCaretPosition() - 1);
                break;
            case '\'':
                sourceHolder.source_board.insert("'", sourceHolder.source_board.getCaretPosition());
                sourceHolder.source_board.setCaretPosition(sourceHolder.source_board.getCaretPosition() - 1);
                break;
            case '"':
                sourceHolder.source_board.insert("\"", sourceHolder.source_board.getCaretPosition());
                sourceHolder.source_board.setCaretPosition(sourceHolder.source_board.getCaretPosition() - 1);
                break;
        }

        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println(sourceHolder.source_board.getText().charAt(sourceHolder.source_board.getCaretPosition() - 2) + "nk2");
            if ((String.valueOf(sourceHolder.source_board.getText().charAt(sourceHolder.source_board.getCaretPosition() - 2))).equals("{")) {
                System.out.println(sourceHolder.source_board.getText().charAt(sourceHolder.source_board.getCaretPosition() - 2) + "nk1");
                int i = 0;
                do {
                    sourceHolder.source_board.insert("    ", sourceHolder.source_board.getCaretPosition());
                    i++;
                } while (i <= rect.getX() / (12));
                // System.out.println(source_board.getCaret().getMagicCaretPosition().y+"
                // "+source_board.getCaret().getMagicCaretPosition().x);
                // System.out.println("\t"+source_board.getCaret().getMagicCaretPosition().getX());
            }
        }
    }// GEN-LAST:event_source_boardKeyReleased

    public void readFile(String f_o, String dir) {
        try {
            BufferedReader br = new BufferedReader(new FileReader(dir + f_o));
            // fname.setText(s.substring(0,s.indexOf('.')));
            String s = f_o;
            fname.setText(s.substring(0, s.indexOf('.')));

            ext.setText(s.substring(s.indexOf('.') + 1));
            System.out.println(s + " " + "nk");// f_o.getName().split(".")[1]);
            String addr = dir;

            address.setText(addr);
            sourceHolder.source_board.setText(null);
            String text = null;
            while ((text = br.readLine()) != null) {
                sourceHolder.source_board.append(text);
                sourceHolder.source_board.append("\n");
            }
            sourceHolder.source_board.setCaretPosition(0);
            br.close();
            System.out.println(s.substring(0, s.indexOf('.')) + " " + "nk");
        } catch (IOException exp) {
            exp.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to read file", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*
         * try {
         * for (javax.swing.UIManager.LookAndFeelInfo info :
         * javax.swing.UIManager.getInstalledLookAndFeels()) {
         * if ("Nimbus".equals(info.getName())) {
         * javax.swing.UIManager.setLookAndFeel(info.getClassName());
         * break;
         * }
         * }
         * } catch (ClassNotFoundException ex) {
         * java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.
         * logging.Level.SEVERE, null, ex);
         * } catch (InstantiationException ex) {
         * java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.
         * logging.Level.SEVERE, null, ex);
         * } catch (IllegalAccessException ex) {
         * java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.
         * logging.Level.SEVERE, null, ex);
         * } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         * java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.
         * logging.Level.SEVERE, null, ex);
         * }
         */
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    public javax.swing.JTabbedPane centertab;
    private javax.swing.JButton comp;
    private javax.swing.JButton comp_run;
    private javax.swing.JPanel details;
    public javax.swing.JTextField ext;
    private javax.swing.JTextField fname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenuItem new_menu;
    private javax.swing.JTextArea op_board;
    private javax.swing.JMenuItem op_menu;
    private javax.swing.JTextArea r_output;
    private javax.swing.JButton rrun;
    private javax.swing.JMenuItem sas_menu;
    private javax.swing.JPanel sourceHolder1;
    private javax.swing.JMenuItem sv_menu;
    private javax.swing.JTabbedPane tabb;
    private javax.swing.JPanel teminals;
    private javax.swing.JTabbedPane ter;
    private javax.swing.JPanel treeHolder;
    // End of variables declaration//GEN-END:variables
}
