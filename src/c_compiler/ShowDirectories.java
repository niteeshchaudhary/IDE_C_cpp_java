/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package c_compiler;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import javax.swing.tree.DefaultMutableTreeNode;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.tree.TreeModel;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
/**
 *
 * @author Niteesh Chaudhary
 */
public class ShowDirectories extends javax.swing.JPanel {

    DefaultMutableTreeNode tree_root;
    Compiler frm;
    /**
     * Creates new form ShowDirectories
     */
    public ShowDirectories(String path,Compiler fr) {
        
        frm=fr;
        tree_root = new DefaultMutableTreeNode(path);
         File directory = new File(path);
        getAllFiles(directory,tree_root);
        initComponents();
        jTree1.addTreeSelectionListener(new TreeSelectionListener() {
            @Override
            public void valueChanged(TreeSelectionEvent e) {
                // Get the selected TreePath
                TreePath path = e.getNewLeadSelectionPath();
                
                if (path != null) {
                    // Get the last component of the TreePath
                    DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
                    
                    // Check if the selected node is a leaf
                    if (selectedNode.isLeaf()) {
                        // Perform your action here for leaf nodes
                        System.out.println("Leaf node clicked: " + selectedNode.getUserObject());
                        frm.centertab.setTitleAt(0,(String)selectedNode.getUserObject() );
                        frm.readFile( (String)selectedNode.getUserObject(),(String)tree_root.getUserObject());
                        
                    }
                }
            }
        });
    }
     void getAllFiles(File directory,DefaultMutableTreeNode node){
        
        File[] files = directory.listFiles();
        
        if (files != null) {
            for (File file : files) {
                if (file.isFile()) {
                    // Process the file
                    DefaultMutableTreeNode treeNode = new DefaultMutableTreeNode(file.getName());
                    
                    node.add(treeNode);
                    System.out.println("File: " + file.getAbsolutePath());
                } else if (file.isDirectory()) {
                    // Recursively call the method to process files within the subdirectory
                    DefaultMutableTreeNode treeNode = new DefaultMutableTreeNode(file.getName());
                    node.add(treeNode);
                    getAllFiles(file,treeNode);
                }
            }
        }
        
        
    }
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree(tree_root);
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        jScrollPane1.setViewportView(jTree1);

        jFormattedTextField1.setText("jFormattedTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    void setModel(String path) {
        tree_root = new DefaultMutableTreeNode(path);
        jTree1.setModel(new DefaultTreeModel(tree_root));
        File directory = new File(path);
        getAllFiles(directory,tree_root);
        
     //   jTree1.setModel(new DefaultTreeModel(tree_root));
    }


}
